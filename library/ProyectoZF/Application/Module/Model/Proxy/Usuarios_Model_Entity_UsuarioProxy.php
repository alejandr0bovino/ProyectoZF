<?php

namespace Proxies;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class Usuarios_Model_Entity_UsuarioProxy extends \Usuarios_Model_Entity_Usuario implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }
    
    
    public function __contstruct()
    {
        $this->__load();
        return parent::__contstruct();
    }

    public function getId()
    {
        $this->__load();
        return parent::getId();
    }

    public function getUsuario()
    {
        $this->__load();
        return parent::getUsuario();
    }

    public function setUsuario($usuario)
    {
        $this->__load();
        return parent::setUsuario($usuario);
    }

    public function getEmail()
    {
        $this->__load();
        return parent::getEmail();
    }

    public function setEmail($email)
    {
        $this->__load();
        return parent::setEmail($email);
    }

    public function getClave()
    {
        $this->__load();
        return parent::getClave();
    }

    public function setClave($clave)
    {
        $this->__load();
        return parent::setClave($clave);
    }

    public function getRole()
    {
        $this->__load();
        return parent::getRole();
    }

    public function setRole($role)
    {
        $this->__load();
        return parent::setRole($role);
    }

    public function getFecha_cre()
    {
        $this->__load();
        return parent::getFecha_cre();
    }

    public function setFecha_cre($fecha_cre)
    {
        $this->__load();
        return parent::setFecha_cre($fecha_cre);
    }

    public function getFecha_mod()
    {
        $this->__load();
        return parent::getFecha_mod();
    }

    public function setFecha_mod($fecha_mod)
    {
        $this->__load();
        return parent::setFecha_mod($fecha_mod);
    }

    public function getNombre()
    {
        $this->__load();
        return parent::getNombre();
    }

    public function setNombre($nombre)
    {
        $this->__load();
        return parent::setNombre($nombre);
    }

    public function getApellido()
    {
        $this->__load();
        return parent::getApellido();
    }

    public function setApellido($apellido)
    {
        $this->__load();
        return parent::setApellido($apellido);
    }

    public function getWebsite()
    {
        $this->__load();
        return parent::getWebsite();
    }

    public function setWebsite($website)
    {
        $this->__load();
        return parent::setWebsite($website);
    }

    public function getFoto()
    {
        $this->__load();
        return parent::getFoto();
    }

    public function setFoto($foto)
    {
        $this->__load();
        return parent::setFoto($foto);
    }

    public function getComentarios()
    {
        $this->__load();
        return parent::getComentarios();
    }

    public function setComentarios($comentarios)
    {
        $this->__load();
        return parent::setComentarios($comentarios);
    }

    public function addComentario(\Catalogo_Model_Entity_Comentario $comentario)
    {
        $this->__load();
        return parent::addComentario($comentario);
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'usuario', 'email', 'clave', 'role', 'fecha_cre', 'fecha_mod', 'nombre', 'apellido', 'website', 'foto', 'comentarios');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}